# Taskfile.yaml
version: "3"

vars:
  ROOT_COMPOSE: docker compose -f stack.yaml
  ROLE_COMPOSE: docker compose -f ansible/roles/pocket_lab/files/stack.yaml
  VENV_DIR: .venv
  VENV_BIN: "{{ .VENV_DIR }}/bin"
  PYTHON: "{{ .VENV_BIN }}/python"
  ANSIBLE_PLAYBOOK_CMD: "{{ .VENV_BIN}}/ansible-playbook"
  ANSIBLE_PLAYBOOK: ansible/site.yaml
  ANSIBLE_INVENTORY: ansible/inventory/hosts.yaml
  ANSIBLE_DETECT_PLAY: ansible/plays/00-detect-user.yaml
  ANSIBLE_BOOTSTRAP_PLAY: ansible/plays/10-bootstrap.yaml
  ANSIBLE_HARDEN_PLAY: ansible/plays/20-harden.yaml
  ANSIBLE_DEPLOY_PLAY: ansible/plays/30-deploy.yaml

tasks:
  venv:init:
    desc: "Create venv & install Ansible + collections"
    cmds:
    - test -d {{.VENV_DIR}} || python3 -m venv {{.VENV_DIR}}
    - "{{.PYTHON}} -m pip install --upgrade pip wheel"
    - "{{.PYTHON}} -m pip install ansible-core==2.16.* ruamel.yaml"
    - "{{.VENV_BIN}}/ansible-galaxy collection install -r ansible/requirements.yaml -p {{.VENV_DIR}}/ansible/collections"
    - "{{.VENV_BIN}}/ansible-galaxy role install -r ansible/requirements.yaml -p {{.VENV_DIR}}/ansible/roles"

  init-env:
    desc: "Create .env from template (for manual compose)"
    cmds:
    - test -f .env || cp .env.template .env

  up:
    desc: "Start stack (root-level compose + .env)"
    cmds:
    - task:init-env
    - "{{.ROOT_COMPOSE}} pull"
    - "{{.ROOT_COMPOSE}} up -d"

  down:
    desc: "Stop & remove containers (root compose)"
    cmds: [ "{{.ROOT_COMPOSE}} down -v --remove-orphans" ]

  logs:
    desc: "Tail logs (root compose)"
    cmds: [ "{{.ROOT_COMPOSE}} logs -f --tail=100" ]

  restart:
    desc: "Restart one service – usage: task restart -- n8n"
    cmds: [ "{{.ROOT_COMPOSE}} restart {{.CLI_ARGS}}" ]

  prune:
    desc: "Docker system prune"
    cmds: [ "docker system prune -f" ]

  detect:
    desc: "Only detect & cache working SSH user"
    deps: [ venv:init ]
    cmds:
    - "{{.ANSIBLE_PLAYBOOK_CMD}} -i {{.ANSIBLE_INVENTORY}} {{.ANSIBLE_DETECT_PLAY}} {{.CLI_ARGS}}"

  bootstrap:
    desc: "Run user‑bootstrap (needs cached conn_user)"
    deps: [ detect ]
    cmds:
    - "{{.ANSIBLE_PLAYBOOK_CMD}} -i {{.ANSIBLE_INVENTORY}} {{.ANSIBLE_BOOTSTRAP_PLAY}} {{.CLI_ARGS}}"

  harden:
    desc: "Run hardening & docker roles"
    deps: [ detect ]
    cmds:
    - "{{.ANSIBLE_PLAYBOOK_CMD}} -i {{.ANSIBLE_INVENTORY}} {{.ANSIBLE_HARDEN_PLAY}} {{.CLI_ARGS}}"

  deploy:
    desc: "Run only the compose deploy / cleanup"
    deps: [ detect ]
    cmds:
    - "{{.ANSIBLE_PLAYBOOK_CMD}} -i {{.ANSIBLE_INVENTORY}} {{.ANSIBLE_DEPLOY_PLAY}} {{.CLI_ARGS}}"

  ansible_full:
    desc: "End‑to‑end: detect → bootstrap → harden → deploy"
    deps: [ venv:init ]
    cmds:
    - "{{.ANSIBLE_PLAYBOOK_CMD}} -i {{.ANSIBLE_INVENTORY}} ansible/site.yaml {{.CLI_ARGS}}"

  ansible-check:
    desc: "Dry-run Ansible"
    deps:
    - venv:init
    cmds:
    - "{{.ANSIBLE_PLAYBOOK_CMD}} -i {{.ANSIBLE_INVENTORY}} {{.ANSIBLE_PLAYBOOK}} --check {{.CLI_ARGS}}"
